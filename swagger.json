{
    "swagger": "2.0",
    "info": {
        "title": "Pleio REST API",
        "description": "This document describes the Pleio REST API. The results of the API (so the contents) are limited to the site that is requested except for the site calls. When requesting an access token, the same token can be used for all the sites.",
        "termsOfService": "https://www.pleio.nl",
        "contact": {
            "email": "helpdesk@pleio.nl"
        },
        "version": "1.0.0"
    },
    "host": "www.pleio.nl",
    "schemes": [
        "https"
    ],
    "paths": {
        "/api/groups/{guid}/activities": {
            "get": {
                "tags": [
                    "activities"
                ],
                "summary": "Find activities in a specific group.",
                "description": "Find the most recent activities from a specific group.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "guid",
                        "in": "path",
                        "description": "The guid of the specific group",
                        "required": true,
                        "type": "integer",
                        "items": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Offset the results by",
                        "required": false,
                        "type": "integer",
                        "items": {
                            "type": "integer"
                        },
                        "default": 0
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Limit the results by",
                        "required": false,
                        "type": "integer",
                        "items": {
                            "type": "integer"
                        },
                        "default": 20
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Succesful operation.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Activity"
                            }
                        }
                    },
                    "404": {
                        "description": "Could not find the requested group."
                    }
                },
                "security": [
                    {
                        "oauth2": [
                            "all"
                        ]
                    }
                ]
            }
        },
        "/api/groups/{guid}/activities/mark_read": {
            "post": {
                "tags": [
                    "activities"
                ],
                "summary": "Mark the activities in the specific group as read.",
                "description": "Mark the activities in the specific group as read till the most recent activity.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "guid",
                        "in": "path",
                        "description": "The guid of the specific group",
                        "required": true,
                        "type": "integer",
                        "items": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Succesful operation."
                    },
                    "404": {
                        "description": "Could not find the requested group."
                    }
                },
                "security": [
                    {
                        "oauth2": [
                            "all"
                        ]
                    }
                ]
            }
        },
        "/oauth/v2/token": {
            "post": {
                "tags": [
                    "authentication"
                ],
                "summary": "Request a new access token.",
                "description": "Request a new access token for the specific user.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "username",
                        "in": "query",
                        "description": "The username of the specific user.",
                        "required": true,
                        "type": "string",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "password",
                        "in": "query",
                        "description": "The password of the specific user.",
                        "required": true,
                        "type": "string",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "client_id",
                        "in": "query",
                        "description": "The id of the client application.",
                        "required": true,
                        "type": "string",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "client_secret",
                        "in": "query",
                        "description": "The secret of the client application.",
                        "required": true,
                        "type": "string",
                        "items": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Succesful operation."
                    }
                }
            }
        },
        "/api/groups/{guid}/events": {
            "get": {
                "tags": [
                    "events"
                ],
                "summary": "Find events in a specific group.",
                "description": "Find the most recent events from a specific group.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "guid",
                        "in": "path",
                        "description": "The guid of the specific group",
                        "required": true,
                        "type": "integer",
                        "items": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Offset the results by",
                        "required": false,
                        "type": "integer",
                        "items": {
                            "type": "integer"
                        },
                        "default": 0
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Limit the results by",
                        "required": false,
                        "type": "integer",
                        "items": {
                            "type": "integer"
                        },
                        "default": 20
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Succesful operation.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Event"
                            }
                        }
                    },
                    "404": {
                        "description": "Could not find the requested event."
                    }
                },
                "security": [
                    {
                        "oauth2": [
                            "all"
                        ]
                    }
                ]
            }
        },
        "/api/groups/{guid}/files": {
            "get": {
                "tags": [
                    "files"
                ],
                "summary": "Find files and folders in a specific group.",
                "description": "Find files and folders from a specific group.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "guid",
                        "in": "path",
                        "description": "The guid of the specific group",
                        "required": true,
                        "type": "integer",
                        "items": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "container_guid",
                        "in": "query",
                        "description": "Fetch the elements of a subfolder with this guid",
                        "required": false,
                        "type": "integer",
                        "items": {
                            "type": "integer"
                        },
                        "default": 0
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Offset the results by",
                        "required": false,
                        "type": "integer",
                        "items": {
                            "type": "integer"
                        },
                        "default": 0
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Limit the results by",
                        "required": false,
                        "type": "integer",
                        "items": {
                            "type": "integer"
                        },
                        "default": 20
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Succesful operation.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/FileFolder"
                            }
                        }
                    },
                    "404": {
                        "description": "Could not find the requested group."
                    }
                },
                "security": [
                    {
                        "oauth2": [
                            "all"
                        ]
                    }
                ]
            }
        },
        "/api/groups/mine": {
            "get": {
                "tags": [
                    "groups"
                ],
                "summary": "Retrieve a list of groups the current user is member of.",
                "description": "Retrieve a list of groups the current user is member of.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Offset the results by",
                        "required": false,
                        "type": "integer",
                        "items": {
                            "type": "integer"
                        },
                        "default": 0
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Limit the results by",
                        "required": false,
                        "type": "integer",
                        "items": {
                            "type": "integer"
                        },
                        "default": 20
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Succesful operation.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Group"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "oauth2": [
                            "all"
                        ]
                    }
                ]
            }
        },
        "/api/groups": {
            "get": {
                "tags": [
                    "groups"
                ],
                "summary": "Retrieve a list of all the groups on the site.",
                "description": "Retrieve a list of all the groups on the site.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Offset the results by",
                        "required": false,
                        "type": "integer",
                        "items": {
                            "type": "integer"
                        },
                        "default": 0
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Limit the results by",
                        "required": false,
                        "type": "integer",
                        "items": {
                            "type": "integer"
                        },
                        "default": 20
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Succesful operation.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Group"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "oauth2": [
                            "all"
                        ]
                    }
                ]
            }
        },
        "/api/groups/{guid}/members": {
            "get": {
                "tags": [
                    "members"
                ],
                "summary": "Find members in a specific group.",
                "description": "Find the members from a specific group.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "guid",
                        "in": "path",
                        "description": "The guid of the specific group",
                        "required": true,
                        "type": "integer",
                        "items": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Offset the results by",
                        "required": false,
                        "type": "integer",
                        "items": {
                            "type": "integer"
                        },
                        "default": 0
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Limit the results by",
                        "required": false,
                        "type": "integer",
                        "items": {
                            "type": "integer"
                        },
                        "default": 20
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Succesful operation.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Event"
                            }
                        }
                    },
                    "404": {
                        "description": "Could not find the requested event."
                    }
                },
                "security": [
                    {
                        "oauth2": [
                            "all"
                        ]
                    }
                ]
            }
        },
        "/api/sites/mine": {
            "get": {
                "tags": [
                    "sites"
                ],
                "summary": "Retrieve a list of sites the current user is member of and that have the API enabled.",
                "description": "Retrieve a list of sites the current user is member of and that have the API enabled.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Offset the results by",
                        "required": false,
                        "type": "integer",
                        "items": {
                            "type": "integer"
                        },
                        "default": 0
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Limit the results by",
                        "required": false,
                        "type": "integer",
                        "items": {
                            "type": "integer"
                        },
                        "default": 20
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Succesful operation.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Site"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "oauth2": [
                            "all"
                        ]
                    }
                ]
            }
        },
        "/api/sites": {
            "get": {
                "tags": [
                    "sites"
                ],
                "summary": "Retrieve a list of all sites.",
                "description": "Retrieve a list of all sites.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Offset the results by",
                        "required": false,
                        "type": "integer",
                        "items": {
                            "type": "integer"
                        },
                        "default": 0
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Limit the results by",
                        "required": false,
                        "type": "integer",
                        "items": {
                            "type": "integer"
                        },
                        "default": 20
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Succesful operation.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Site"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "oauth2": [
                            "all"
                        ]
                    }
                ]
            }
        },
        "/api/users/me/generate_token": {
            "post": {
                "tags": [
                    "user"
                ],
                "summary": "Generate a single-use login token for the user.",
                "description": "Generate a single-use login token for the user.",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Succesful operation."
                    }
                },
                "security": [
                    {
                        "oauth2": [
                            "all"
                        ]
                    }
                ]
            }
        },
        "/api/users/me/login_token": {
            "get": {
                "tags": [
                    "user"
                ],
                "summary": "Login the user by single-use token and redirect to the requested page.",
                "description": "Login the user by token and redirect to the requested page.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "user_guid",
                        "in": "query",
                        "description": "The guid of the user",
                        "required": true,
                        "type": "integer",
                        "items": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "redirect_url",
                        "in": "query",
                        "description": "The URL to redirect after login (only on the same host)",
                        "required": false,
                        "type": "integer",
                        "items": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "token",
                        "in": "query",
                        "description": "The secret single-use token",
                        "required": true,
                        "type": "integer",
                        "items": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "301": {
                        "description": "Succesful operation."
                    },
                    "403": {
                        "description": "Invalid or expired token."
                    }
                },
                "security": [
                    {
                        "oauth2": [
                            "all"
                        ]
                    }
                ]
            }
        },
        "/api/users/me/register_push": {
            "post": {
                "tags": [
                    "user"
                ],
                "summary": "Register application for push notifications.",
                "description": "Register an application to receive push notifications of activities.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "service",
                        "in": "query",
                        "description": "The service (gcm, apns or mpns)",
                        "required": true,
                        "type": "string",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "device_id",
                        "in": "query",
                        "description": "The unique device ID.",
                        "required": true,
                        "type": "string",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "token",
                        "in": "query",
                        "description": "The token received from Google Cloud Messaging (GCM), Apple Push Notification Gateway Service (APNS) or the URI from Microsoft Push Notification Service (MPNS).",
                        "required": true,
                        "type": "string",
                        "items": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Succesful operation."
                    }
                },
                "security": [
                    {
                        "oauth2": [
                            "all"
                        ]
                    }
                ]
            }
        },
        "/api/users/me/deregister_push": {
            "post": {
                "tags": [
                    "user"
                ],
                "summary": "Deregister application for push notifications.",
                "description": "Deregister an application to receive push notifications of activities.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "service",
                        "in": "query",
                        "description": "The service (gcm, apns or mpns)",
                        "required": true,
                        "type": "string",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "device_id",
                        "in": "query",
                        "description": "The unique device ID registered with register_push.",
                        "required": true,
                        "type": "string",
                        "items": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Succesful operation."
                    }
                },
                "security": [
                    {
                        "oauth2": [
                            "all"
                        ]
                    }
                ]
            }
        },
        "/api": {
            "get": {
                "tags": [
                    "version"
                ],
                "responses": {
                    "200": {
                        "description": "Retrieve API version information."
                    }
                }
            }
        }
    },
    "definitions": {
        "Activity": {
            "required": [
                "id",
                "subject"
            ],
            "properties": {
                "id": {
                    "type": "integer"
                },
                "subject": {
                    "type": "string"
                },
                "action_type": {
                    "type": "string"
                },
                "object": {
                    "type": "string"
                },
                "time_created": {
                    "type": "string"
                }
            }
        },
        "Event": {
            "required": [
                "guid",
                "title"
            ],
            "properties": {
                "guid": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "start_time": {
                    "type": "string"
                },
                "end_time": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                },
                "icon_url": {
                    "type": "string"
                },
                "time_created": {
                    "type": "string"
                }
            }
        },
        "FileFolder": {
            "required": [
                "guid",
                "subtype",
                "title"
            ],
            "properties": {
                "guid": {
                    "type": "integer"
                },
                "subtype": {
                    "type": "string",
                    "enum": [
                        "file",
                        "folder"
                    ]
                },
                "title": {
                    "type": "string"
                },
                "time_created": {
                    "type": "string"
                }
            }
        },
        "Group": {
            "required": [
                "guid",
                "name",
                "membership"
            ],
            "properties": {
                "guid": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "membership": {
                    "description": "Can be open or closed.",
                    "type": "string"
                },
                "icon_url": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                },
                "activities_unread_count": {
                    "type": "integer"
                },
                "time_created": {
                    "type": "string"
                }
            }
        },
        "User": {
            "required": [
                "guid",
                "name"
            ],
            "properties": {
                "guid": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "icon_url": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "Site": {
            "required": [
                "guid",
                "name",
                "url",
                "membership"
            ],
            "properties": {
                "guid": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                },
                "membership": {
                    "description": "Can be open or closed.",
                    "type": "string"
                },
                "icon_url": {
                    "type": "string"
                },
                "time_created": {
                    "description": "In ISO-8601 format.",
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "oauth2": {
            "type": "oauth2",
            "flow": "password",
            "tokenUrl": "https://www.pleio.nl/oauth/v2/token",
            "scopes": {
                "all": "Perform all actions"
            }
        }
    },
    "tags": [
        {
            "name": "activities",
            "description": "Retrieve the latest activities."
        },
        {
            "name": "authentication",
            "description": "Request a token to access protected resources."
        },
        {
            "name": "groups",
            "description": "Retrieve a list of groups."
        },
        {
            "name": "sites",
            "description": "Retrieve a list of sites."
        },
        {
            "name": "events",
            "description": "Retrieve a list of events."
        },
        {
            "name": "members",
            "description": "Retrieve a list of members."
        },
        {
            "name": "files",
            "description": "Retrieve a list of files and folders."
        },
        {
            "name": "version",
            "description": "Retrieve API version information."
        },
        {
            "name": "user",
            "description": "Perform user-based actions."
        }
    ]
}